name: Build

on:
  push:
    branches: [ "master" ]
    tags:
      - '*'
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  Linux:
    name: Building on Ubuntu. 
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build release
      run: |
        rustup default nightly
        rustup update
        rustup component add rust-src clippy
        cargo update
        time cargo build --release
        time cargo lto
        time cargo src x86_64-unknown-linux-gnu
        ls -hl target/**/BL
        ls -hl target/*/*/BL
        lscpu
        #lshw
        free -m
    - name: Run tests
      run: cargo test --release
    - name: Upload files to a GitHub release
      uses: svenstaro/upload-release-action@2.5.0
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: |
          target/release/BL
          target/lto/BL
          target/x86_64-unknown-linux-gnu/src/BL
        asset_name: Linux
        tag: Nightly
        overwrite: true
        body: "Ubuntu Linux BL binary executable."
          
  macOS:
    name: Building on macOS. 
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build release
      run: |
        rustup default nightly
        rustup update
        rustup component add rust-src clippy
        cargo update
        time cargo build --release
        time cargo lto
        time cargo src x86_64-apple-darwin
        ls -hl target/**/BL
        ls -hl target/*/*/BL
        sw_vers
        hostinfo
        sysctl -a | grep brand
    - name: Run tests
      run: cargo test --release
    - name: Upload files to a GitHub release
      uses: svenstaro/upload-release-action@2.5.0
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: |
          target/release/BL
          target/lto/BL
          target/x86_64-apple-darwin/src/BL
        asset_name: macOS
        tag: Nightly
        overwrite: true
        body: "Ubuntu Linux BL binary executable."
      
  Windows:
    name: Building on Windows. 
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build release
      run: |
        rustup default nightly
        rustup update
        rustup component add rust-src clippy
        cargo update
        cargo build --release
        cargo lto
        cargo src x86_64-pc-windows-msvc
        dir target/*/*.exe
        dir target/x86_64-pc-windows-msvc/*/*.exe
        systeminfo
    - name: Run tests
      run: cargo test --release
